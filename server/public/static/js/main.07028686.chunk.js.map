{"version":3,"sources":["components/auth/AuthService.js","components/contents/User/UserService.js","components/auth/Signup.js","components/auth/Login.js","components/navbar/Navbar.js","components/contents/Studio/StudioService.js","components/contents/Studio/CreateStudio.js","components/contents/Studio/Studio.js","components/contents/Studio/ViewStudios.js","components/calendar/Calendar.js","components/calendar/ViewCalendar.js","components/contents/Project/ProjectService.js","components/contents/Project/Project.js","components/contents/Project/CreateProject.js","components/contents/SearchBar/SearchBar.js","components/contents/Project/ViewProjects.js","components/contents/Task/Task.js","components/contents/Task/ViewTasks.js","components/contents/User/Profile.js","components/contents/PhotoService.js","components/contents/User/EditProfile.js","components/contents/Project/EditProject.js","components/contents/Studio/EditStudio.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","email","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","UserService","deleteUser","editUser","image","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","className","onSubmit","placeholder","type","onChange","e","to","Component","Login","Navbar","handleLogout","loggedInUser","src","alt","onClick","userInSession","StudioService","studioname","allStudios","oneStudio","studioID","deleteStudio","studioToDelete","_id","editStudio","id","CreateStudio","getStudio","Studio","handleClic","selected","studio","studioimage","projects","length","editHandler","ViewStudios","studioObj","newArray","studios","push","getAllStudios","studioToDeleteFromState","filter","Array","isArray","map","key","MONTH_LABELS","Calendar","startDate","endDate","render","disableDates","date","Date","getTime","range","monthLabels","setDate","getDate","ViewCalendar","ProjectService","projectName","allProjects","editProject","projectID","projectname","bandname","comments","deleteProject","projectToDelete","Project","project","projectimage","CreateProject","bandName","belongsTo","urlId","getProject","saveProject","err","console","log","show","cols","rows","SearchBar","updateSearchFormData","viewProjects","projectsClean","showform","serviceStudio","match","params","search","projectsSearch","toLowerCase","includes","projectToDeleteFromState","updateSearch","showForm","selectedStudio","Task","checked","task","done","updateTaskValue","style","textDecoration","moment","createdAt","format","deleteTask","ViewTasks","tasks","newTask","tasksFromBackend","taskToUpdate","newDoneState","find","URL","allTasks","taskToDelete","taskToDeleteFromState","setNewTaskValue","addNewTask","Profile","Moment","created_at","PhotoService","theFile","res","EditProfile","newName","newEmail","imgPath","success","fetchUser","handleFileUpload","uploadData","FormData","append","files","photoService","handleUpload","image_url","htmlFor","disabled","checkToSend","EditProject","EditStudio","App","userObj","projecttoedit","studiotoedit","serviceUser","prompt","Fragment","exact","path","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07028686.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email) => {\n    return this.service.post('/signup', {username, password, email})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import axios from \"axios\";\n\nclass UserService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  deleteUser = () => {\n    return this.service.post('/deleteUser')\n    .then(response => response.data);\n  }\n\n  editUser = (username, email, image) => {\n    return this.service.post('/updateUser', {username, email, image})\n    .then(response => response.data);\n  }\n\n  \n\n}\n\nexport default UserService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport \"./Login-signup.css\";\n\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n\n    \n    this.service.signup(username, password, email)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div className=\"login-signup\">\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            {/* <label className=\"LSlabel\">Username:</label> */}\n            <input className=\"LSinput\" placeholder=\"Username...\" type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset >\n            {/* <label className=\"LSlabel\">Email:</label> */}\n            <input className=\"LSinput\" placeholder=\"Email...\" type=\"text\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            {/* <label className=\"LSlabel\">Password:</label> */}\n            <input className=\"LSinput\" placeholder=\"Password...\" type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input className=\"LSbutton\" type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n\n        <span className=\"LStext\">Allready a  user? <Link className=\"LStextLink\" to=\"/login\">login</Link></span>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport AuthService from \"./AuthService\";\nimport \"./Login-signup.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"login-signup\">\n        <h3>Login to your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            {/* <label className=\"LSlabel\">Username:</label> */}\n            <input className=\"LSinput\"\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            {/* <label className=\"LSlabel\">Password:</label> */}\n            <input className=\"LSinput\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input className=\"LSbutton\" type=\"submit\" value=\"Login\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      \n        <span className=\"LStext\">Not a  user? <Link className=\"LStextLink\" to=\"/signup\">Signup</Link></span>\n      \n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: {} };\n    this.service = new AuthService();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    \n    return (state.loggedInUser = props.userInSession);\n    \n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n   \n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            {/* <div className=\"navbar-element\">\n              <Link to={\"/viewcalendar\"}>Calendar</Link>\n            </div> */}\n            <div className=\"navbar-element\">\n              <Link to={\"/viewstudios\"}>Home</Link>\n            </div>\n          </div>\n          <div className=\"navbar-block-right\">\n            <div className=\"navbar-element\">\n              <Link to={\"/profile\"}>\n                {this.state.loggedInUser.username}'s profile\n              </Link>\n            </div>\n            <div className=\"navbar-element\">\n              <Link to={\"/login\"} onClick={this.handleLogout}>\n                Logout\n              </Link>\n            </div>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            </div>\n            <div className=\"navbar-block-right\">\n              <div className=\"navbar-element\">\n                <Link to=\"/signup\">Signup</Link>\n              </div>\n              <div className=\"navbar-element\">\n                <Link to=\"/login\">Login</Link>\n              </div>\n            </div>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nclass StudioService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/studioroutes`,\n      withCredentials: true\n    });\n  }\n\n  create = studioname => {\n    return this.service\n      .post(\"/studiocreate\", { studioname })\n      .then(response => response.data);\n  };\n\n  allStudios = () => {\n    return this.service.get('/allStudios')\n    .then(response => response.data);\n  }\n\n  oneStudio = (studioID) => {\n    return this.service.get(`/getStudio/${studioID}`)\n    .then(response => response.data);\n  }\n\n  deleteStudio = (studioToDelete) => {\n    return this.service.post(`/deleteStudio/${studioToDelete._id}`)\n    .then(response => response.data);\n  }\n\n  editStudio = (id, studioname, image) => {\n    return this.service.post(`/editStudio/${id}`, {studioname, image})\n    .then(response => response.data);\n  }\n}\n\nexport default StudioService;\n","import React, { Component } from \"react\";\nimport StudioService from \"./StudioService\";\nimport \"./CreateStudio.css\";\nexport default class CreateStudio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studioname: \"\"\n    };\n    this.service = new StudioService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const studioname = this.state.studioname;\n    this.service\n      .create(studioname)\n      .then(response => {\n        this.setState({\n          studioname: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getStudio(response);\n      })\n      .catch(error => {\n        this.setState({\n          studioname: studioname,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"createStudio\">\n        <h3>Create your studio:</h3>\n\n        <form className=\"create-form\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <input\n              type=\"text\"\n              name=\"studioname\"\n              placeholder=\"Your studio's name...\"\n              value={this.state.studioname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"create\" />\n        </form>\n\n        <h1>{this.state.error ? \"You need a name!\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Studio.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Studio extends Component {\n\n  handleClic = e => {\n    this.props.selected(this.props.studio._id);\n  };\n\n  editHandler(e){\n    this.props.editStudio(this.props.studio)\n  }\n\n  render() {\n    return (\n      <div className=\"studioCard\">\n        <img\n          src={this.props.studio.studioimage}\n          alt={this.props.studio.studioname}\n        />\n        <h2>{this.props.studio.studioname}</h2>\n        <h4>Projects: {this.props.studio.projects.length} </h4>\n        \n        <Link to={`/viewprojects/${this.props.studio._id}`}>\n          <button\n            onClick={e => {\n              this.handleClic(e);\n            }}\n          >\n            View projects\n          </button>\n        </Link>\n\n        <div className=\"horizontal-buttons\">\n        <Link to={`/editstudio/${this.props.studio._id}`}>\n          <button onClick={e => this.editHandler(e)}>Edit</button>\n        </Link>\n        <button className=\"danger\" onClick={() => this.props.deleteStudio(this.props.studio)}>\n          Delete\n        </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CreateStudio from \"./CreateStudio\";\nimport Studio from \"./Studio\";\nimport StudioService from \"./StudioService\";\nimport \"./viewStudio.css\";\n\nexport default class ViewStudios extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studios: []\n    };\n    this.service = new StudioService();\n  }\n\n  getStudio = studioObj => {\n    let newArray = [...this.state.studios];\n    newArray.push(studioObj);\n    this.setState({\n      ...this.state,\n      studios: newArray\n    });\n  };\n\n  componentDidMount() {\n    this.getAllStudios();\n  }\n\n  getAllStudios() {\n    this.service.allStudios().then(allStudios => {\n      this.setState({ ...this.state, studios: allStudios });\n    });\n  }\n\n  deleteStudio(studioToDelete) {\n    \n    let studios = [...this.state.studios];\n    let studioToDeleteFromState = studios.filter(\n      studio => studio._id !== studioToDelete._id\n    );\n    this.setState({\n      ...this.state,\n      studios: studioToDeleteFromState\n    });\n    this.service.deleteStudio(studioToDelete)\n  }\n\n  render() {\n    \n    if (!Array.isArray(this.state.studios)) {\n      return (\n        <div>\n          <CreateStudio getStudio={this.getStudio} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"viewStudio\">\n          <div className=\"studioView\">\n            {this.state.studios.map(studio => (\n              <Studio\n                key={studio._id}\n                editStudio={this.props.editStudio}\n                selected={this.props.selected}\n                studio={studio}\n                deleteStudio={studioToDelete =>\n                  this.deleteStudio(studioToDelete)\n                }\n              />\n            ))}\n          </div>\n\n          <CreateStudio getStudio={this.getStudio}></CreateStudio>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactLightCalendar from '@lls/react-light-calendar'\nimport '@lls/react-light-calendar/dist/index.css'\n\n// const DAY_LABELS = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche']\nconst MONTH_LABELS = ['Enero', 'Febrero', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aûot', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props)\n    const date = new Date()\n    const startDate = date.getTime()\n    this.state = {\n      startDate, // Today\n      endDate: new Date(startDate).setDate(date.getDate() + 0) // Today + 6 days\n    }\n  }\n\n  onChange = (startDate, endDate) => {\n    \n  this.setState({ startDate, endDate })}\n\n  render = () => {\n    const { startDate, endDate } = this.state\n\n    return (\n        <ReactLightCalendar disableDates={date => date < new Date().getTime()}  startDate={startDate} endDate={endDate} onChange={this.onChange} range monthLabels={MONTH_LABELS}/>\n    )\n  }\n}\n\nexport default Calendar;","import React, { Component } from 'react'\nimport Calendar from './Calendar'\n\nexport default class ViewCalendar extends Component {\n  render() {\n    return (\n      <div>\n         <Calendar></Calendar>\n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/projectRoutes`,\n      withCredentials: true\n    });\n  }\n\n  create = projectName => {\n    return this.service\n      .post(\"/newProject\", { projectName })\n      .then(response => response.data);\n  };\n\n  allProjects = id => {\n    return this.service\n      .get(`/allProjects/${id}`)\n      .then(response => response.data);\n  };\n\n  editProject = (projectID, projectname, bandname, comments, image) => {\n    return this.service.post(`/editProject/${projectID}`, {projectname, bandname, comments, image})\n    .then(response => response.data);\n  }\n\n  deleteProject = (projectToDelete) => {\n    return this.service.post(`/deleteProject/${projectToDelete._id}`)\n    .then(response => response.data);\n  }\n}\n\nexport default ProjectService;\n","import React, { Component } from \"react\";\nimport \"./Project.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Project extends Component {\n\n  editHandler(e){\n    this.props.editProject(this.props.project)\n  }\n  \n  render() {\n    return (\n      <div className=\"projectCard\">\n        <img\n          src={this.props.project.projectimage}\n          alt={this.props.project.name}\n        />\n        <h2>{this.props.project.name}</h2>\n        <h3>{this.props.project.bandname}</h3>\n\n        <Link to={`/viewtasks/${this.props.project._id}`}>\n          <button>See tasks</button>\n        </Link>\n\n        <div className=\"horizontal-buttons\">\n\n          <Link to={`/editproject/${this.props.project._id}`}>\n            <button onClick={(e)=>this.editHandler(e)}>Edit</button>\n          </Link>\n\n          <button className=\"danger\" onClick={() => this.props.deleteProject(this.props.project)}>\n            Delete\n          </button>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport \"./CreateProject.css\";\n\nexport default class CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: \"\",\n      bandname: \"\",\n      comments: \"\"\n    };\n    this.service = new ProjectService();\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const projectName = this.state.projectname;\n    const bandName = this.state.bandname;\n    const comments = this.state.comments;\n\n    this.service\n      .create({\n        projectname: projectName,\n        bandname: bandName,\n        comments: comments,\n        belongsTo: this.props.urlId\n      })\n      .then(response => {\n        this.setState({\n          ...this.state,\n          projectname: \"\",\n          bandname: \"\",\n          comments: \"\"\n        });\n        this.props.getProject(response.saveProject);\n      })\n      .catch(err => {\n        this.setState({\n          projectname: projectName,\n          bandname: bandName,\n          comments: comments,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    console.log(this.props.show);\n    if (this.props.show === false) {\n      return (\n        <div className=\"createProject hidden\">\n          {/* <div className=\"transparent-background\"> */}\n            <h3>Create a new project:</h3>\n\n            <form\n              className=\"create-project-form\"\n              onSubmit={this.handleFormSubmit}\n            >\n              <div className=\"horizontal-form\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Project name\"\n                  name=\"projectname\"\n                  value={this.state.projectname}\n                  onChange={e => this.handleChange(e)}\n                />\n\n                <input\n                  type=\"text\"\n                  placeholder=\"Band name\"\n                  name=\"bandname\"\n                  value={this.state.bandname}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n\n              <textarea\n                placeholder=\"Comments...\"\n                cols=\"50\"\n                rows=\"8\"\n                name=\"comments\"\n                value={this.state.comments}\n                onChange={e => this.handleChange(e)}\n              ></textarea>\n\n              <input type=\"submit\" value=\"create\" />\n            </form>\n\n            <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n          </div>\n        // </div>\n      );\n    } else {\n      return (\n        <div className=\"createProject\">\n          {/* <div className=\"transparent-background\"> */}\n            <h3>Create a new project:</h3>\n\n            <form\n              className=\"create-project-form\"\n              onSubmit={this.handleFormSubmit}\n            >\n              <div className=\"horizontal-form\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Project name\"\n                  name=\"projectname\"\n                  value={this.state.projectname}\n                  onChange={e => this.handleChange(e)}\n                />\n\n                <input\n                  type=\"text\"\n                  placeholder=\"Band name\"\n                  name=\"bandname\"\n                  value={this.state.bandname}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n\n              <textarea\n                placeholder=\"Comments...\"\n                cols=\"50\"\n                rows=\"8\"\n                name=\"comments\"\n                value={this.state.comments}\n                onChange={e => this.handleChange(e)}\n              ></textarea>\n\n              <input type=\"submit\" value=\"create\" />\n            </form>\n\n            <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n          </div>\n        // </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      // <form className=\"search-form\" id=\"test\">\n      <div className=\"search-form\">\n        <input\n          type=\"search\"\n          name=\"projectSearch\"\n          placeholder=\"Search projects...\"\n          onChange={e => this.props.updateSearchFormData(e)}\n        ></input>\n      </div>\n      // </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport StudioService from \"./../Studio/StudioService\";\nimport Project from \"./Project\";\nimport CreateProject from \"./CreateProject\";\nimport \"./viewProjects.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Link } from \"react-router-dom\";\n\nexport default class viewProjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      projectsClean: [],\n      studio: {},\n      showform: false,\n    };\n    this.service = new ProjectService();\n    this.serviceStudio = new StudioService();\n  }\n\n  getProject = project => {\n    let newArray = [...this.state.projects];\n    newArray.push(project);\n    this.setState({\n      ...this.state,\n      projects: newArray,\n      projectsClean: newArray\n    });\n  };\n\n  componentDidMount() {\n    this.getStudio();\n    // this.updateSearch();\n  }\n\n  async getStudio() {\n    const studio = await this.serviceStudio.oneStudio(\n      this.props.match.params.id\n    );\n    // console.log(studio);\n    this.setState({\n      ...this.state,\n      studio: studio,\n      projectsClean: studio.projects,\n      projects: studio.projects\n      // projects: allProjects\n    });\n  }\n\n  updateSearch(e) {\n    let search = e.target.value;\n    let projectsSearch = [...this.state.projectsClean];\n\n    this.setState({\n      ...this.state,\n      projects: projectsSearch.filter(project =>\n        project.name.toLowerCase().includes(search.toLowerCase())\n      )\n    });\n  }\n\n  deleteProject(projectToDelete) {\n    \n    let projects = [...this.state.projects];\n    let projectToDeleteFromState = projects.filter(\n      project => project._id !== projectToDelete._id\n    );\n    this.setState({\n      ...this.state,\n      projects: projectToDeleteFromState\n    });\n    this.service.deleteProject(projectToDelete);\n  }\n\n  showForm() {\n    \n    this.setState({\n      ...this.state, showform: !this.state.showform\n    })\n  }\n\n  render() {\n    \n    if (!!this.state.studio) {\n      if (!!this.state.projects) {\n        return (\n          <div className=\"viewProject\">\n            <SearchBar\n              className=\"search\"\n              updateSearchFormData={e => this.updateSearch(e)}\n            ></SearchBar>\n            <button className=\"button-back\" onClick={()=>{this.showForm()}}>Create new project</button>\n            <div className=\"projectView\">\n              {this.state.projects.map(project => (\n                <Project\n                  key={project._id}\n                  project={project}\n                  selected={this.props.selectedStudio}\n                  deleteProject={projectToDelete =>\n                    this.deleteProject(projectToDelete)\n                  }\n                  editProject={this.props.editProject}\n                ></Project>\n              ))}\n            </div>\n            \n             <CreateProject \n             show={this.state.showform}\n              getProject={response => this.getProject(response)}\n              urlId={this.props.match.params.id}\n            ></CreateProject>\n             \n             \n\n            <div>\n              <Link to={\"/viewstudios\"}><button className=\"button-back\">Back to studios</button></Link>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./Task.css\";\n\nexport default class Task extends Component {\n  render() {\n    return (\n      <div className=\"taskItemComponent\">\n        <div className=\"task-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={this.props.task.done}\n            onChange={() => this.props.updateTaskValue(this.props.task)}\n          ></input>\n        </div>\n        <div className=\"task-created\">\n          <span\n            style={{\n              textDecoration: this.props.task.done ? \"line-through\" : \"\"\n            }}\n          >\n            {moment(this.props.task.createdAt).format(\"DD/MM hh:mm\")}\n          </span>\n        </div>\n        <div className=\"task-title\">\n          <span\n            style={{\n              textDecoration: this.props.task.done ? \"line-through\" : \"\"\n            }}\n          >\n            {this.props.task.name}\n          </span>\n        </div>\n        <div className=\"task-button\">\n          <button onClick={() => this.props.deleteTask(this.props.task)}>\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Task from \"./Task\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./ViewTasks.css\";\nexport default class ViewTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: \"\",\n      bandname: \"\",\n      comments: \"\",\n      projectimage: \"\",\n      tasks: [],\n      newTask: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/api/taskRoutes/projectTasks/${this.props.match.params.id}`\n      )\n      .then(tasksFromBackend => {\n        // debugger\n        this.setState({\n          ...this.state,\n          tasks: tasksFromBackend.data.tasks,\n          bandname: tasksFromBackend.data.bandname,\n          projectname: tasksFromBackend.data.name,\n          comments: tasksFromBackend.data.comments,\n          projectimage: tasksFromBackend.data.projectimage\n        });\n      });\n  }\n\n  addNewTask() {\n    if (this.state.newTask === \"\") return;\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/taskRoutes/newTask`, {\n        name: this.state.newTask,\n        projectID: this.props.match.params.id\n      })\n      .then(tasksFromBackend => {\n        this.setState({\n          ...this.state,\n          tasks: tasksFromBackend.data.tasks,\n          newTask: \"\"\n        });\n      });\n  }\n\n  setNewTaskValue(e) {\n    this.setState({\n      ...this.state,\n      newTask: e.target.value\n    });\n  }\n\n  updateTaskValue(taskToUpdate) {\n    // this clones the tasks from the state\n    let tasks = [...this.state.tasks];\n\n    // this finds the selected task to be modified\n    let taskToUpdateFromState = tasks.find(\n      task => task._id === taskToUpdate._id\n    );\n    let newDoneState = !taskToUpdateFromState.done;\n\n    let URL = `${process.env.REACT_APP_API_URL}/api/taskRoutes/task/${taskToUpdate._id}/done/${newDoneState}/project/${this.props.match.params.id}`;\n\n    axios.get(URL).then(allTasks => {\n      // this re-updates the state with updated object, hence updating the checkbox\n      this.setState({\n        ...this.state,\n        tasks: allTasks.data.tasks\n      });\n    });\n  }\n\n  deleteTask(taskToDelete) {\n    let tasks = [...this.state.tasks];\n    let taskToDeleteFromState = tasks.filter(\n      task => task._id !== taskToDelete._id\n    );\n    this.setState({\n      ...this.state,\n      tasks: taskToDeleteFromState\n    });\n    axios.get(\n      `${process.env.REACT_APP_API_URL}/api/taskRoutes/deleteTask/${taskToDelete._id}`\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"tasks\">\n        <section className=\"project-info\">\n          <div className=\"project-info-image\">\n            <img src={this.state.projectimage} alt=\"project\" />\n          </div>\n          <div className=\"project-info-info\">\n            <h2>Project name: {this.state.projectname}</h2>\n            <h3>Band name: {this.state.bandname}</h3>\n            <div className=\"project-info-comments\">\n            <p>Comments: {this.state.comments}</p>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"add-new-task\">\n          <input\n            type=\"text\"\n            value={this.state.newTask}\n            onChange={e => this.setNewTaskValue(e)}\n            placeholder=\"Add your new task...\"\n          ></input>\n          <button onClick={() => this.addNewTask()}>Add new task</button>\n        </section>\n\n        {this.state.tasks.filter(task => !task.done).length > 0 && (\n          <div className=\"task-list\">\n            <h3 className=\"task-list-column\">\n              To do - {this.state.tasks.filter(task => !task.done).length}\n            </h3>\n            <section className=\"task-list-column\">\n              {this.state.tasks\n                .filter(task => !task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                      deleteTask={task => this.deleteTask(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length > 0 && (\n          <div className=\"task-list\">\n            <h3 className=\"task-list-column\">\n              Done - {this.state.tasks.filter(task => task.done).length}\n            </h3>\n            <section className=\"task-list-column\">\n              {this.state.tasks\n                .filter(task => task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                      deleteTask={task => this.deleteTask(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length === 0 && (\n          <h1>No tasks done</h1>\n        )}\n        <div>\n          <Link to={`/viewprojects/${this.props.selectedStudio}`}>\n            <button className=\"button-back\">Back to projects</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\"\nimport \"./Profile.css\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"view-profile\">\n        <div className=\"profileCard\">\n          <div className=\"profile-image\">\n          <img src={this.state.user.image} alt=\"profile pic\"></img>\n          </div>\n          <div className=\"profile-info\">\n            <h2>Hello {this.state.user.username}!</h2>\n            <h4>email: {this.state.user.email}</h4>\n            <h4>User since: {Moment(this.state.user.created_at).format('dddd DD MMM YYYY')}</h4>\n            <div>\n              <Link to={'/editprofile'}><button props={this.state.user}>Edit your profile</button></Link>\n              <button onClick={() => this.props.deleteUser()}>\n                Delete your profile\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n\nclass PhotoService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/photoRoutes`,\n      withCredentials: true\n    });\n  }\n\n  handleUpload(theFile) {\n    \n    return this.service\n      .post(\"/upload\", theFile)\n      .then(res => res.data)\n      .catch(err => console.log(err));\n  }\n\n}\n\nexport default PhotoService;","import React, { Component } from \"react\";\nimport UserService from \"./UserService\";\nimport PhotoService from \"../PhotoService\";\nimport \"./EditProfile.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      newName: this.props.user.username,\n      newEmail: this.props.user.email,\n      imgPath: \"\",\n      error: null,\n      success: false\n    };\n    this.service = new UserService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.newName;\n    const email = this.state.newEmail;\n    const image = this.state.imgPath;\n\n    this.service\n      .editUser(username, email, image)\n      .then(response => {\n        this.setState(\n          {\n            newName: username,\n            newEmail: email,\n            imgPath: image,\n            success: true\n          },\n          () => {\n            this.props.fetchUser();\n          }\n        );\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.image_url\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  checkToSend() {\n    if (!this.state.newName || !this.state.newEmail || !this.state.imgPath) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"edit-profile\">\n        <h3>Edit your profile:</h3>\n\n        <form className=\"edit-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"edit-profile-flex\">\n            <div className=\"edit-profile-flex-col\">\n              <label className=\"edit-label\">Username:</label>\n              <input\n                type=\"text\"\n                name=\"newName\"\n                value={this.state.newName}\n                onChange={e => this.handleChange(e)}\n              />\n\n              <label className=\"edit-label\">Email:</label>\n              <input\n                type=\"text\"\n                name=\"newEmail\"\n                value={this.state.newEmail}\n                onChange={e => this.handleChange(e)}\n              />\n              <label className=\"edit-label\">New photo:</label>\n              <label htmlFor=\"profile-uploader\" className=\"fake-uploader\">\n                <img\n                  src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1571321408/upload_1_uwjkbg.png\"\n                  alt=\"arrow\"\n                ></img>\n              </label>\n              <input\n                className=\"inputfile\"\n                type=\"file\"\n                id=\"profile-uploader\"\n                name=\"imageUrl\"\n                onChange={e => this.handleFileUpload(e)}\n              />\n            </div>\n            <div>\n              {this.state.imgPath && (\n                <img\n                  className=\"new-upload-img\"\n                  src={this.state.imgPath}\n                  alt=\"New upload\"\n                ></img>\n              )}\n            </div>\n          </div>\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n        <Link to={'/profile'}><button className=\"button-back\">Go back</button></Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport { Link } from \"react-router-dom\";\nimport PhotoService from \"../PhotoService\";\nimport './EditProject.css'\n\nexport default class EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: this.props.project.name,\n      bandname: this.props.project.bandname,\n      comments: this.props.project.comments,\n      imgPath: \"\",\n      error: null,\n      success: false\n    };\n    this.service = new ProjectService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const projectname = this.state.projectname;\n    const bandname = this.state.bandname;\n    const comments = this.state.comments;\n    const image = this.state.imgPath;\n    const projectID = this.props.project._id;\n\n    this.service\n      .editProject(projectID, projectname, bandname, comments, image)\n      .then(response => {\n        this.setState({\n          projectname: projectname,\n          bandname: bandname,\n          comments: comments,\n          imgPath: image,\n          success: true,\n          error: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.image_url\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  checkToSend() {\n    if (!this.state.projectname || !this.state.imgPath) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"edit-studio\">\n        <h3>Edit project:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"edit-studio-form\">\n            <div className=\"edit-studio-info\">\n              <label className=\"edit-label\">Project name:</label>\n              <input\n                type=\"text\"\n                // placeholder={this.state.user.username}\n                name=\"projectname\"\n                value={this.state.projectname}\n                onChange={e => this.handleChange(e)}\n              />\n\n              <label className=\"edit-label\">Band name:</label>\n              <input\n                type=\"text\"\n                // placeholder={this.state.user.email}\n                name=\"bandname\"\n                value={this.state.bandname}\n                onChange={e => this.handleChange(e)}\n              />\n\n              <label className=\"edit-label\">Comments:</label>\n              <div className=\"edit-project-textarea\">\n                <textarea\n                  name=\"comments\"\n                  value={this.state.comments}\n                  onChange={e => this.handleChange(e)}\n                ></textarea>\n              </div>\n\n              <label className=\"edit-label\">Project image:</label>\n              <label htmlFor=\"uploader\" className=\"fake-uploader\">\n                <img\n                  src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1571321408/upload_1_uwjkbg.png\"\n                  alt=\"arrow\"\n                ></img>\n              </label>\n              <input\n                className=\"inputfile\"\n                type=\"file\"\n                id=\"uploader\"\n                name=\"imageUrl\"\n                onChange={e => this.handleFileUpload(e)}\n              />\n            </div>\n            <div className=\"edit-studio-image\">\n              {this.state.imgPath && (\n                <img\n                  className=\"new-upload-img\"\n                  src={this.state.imgPath}\n                  alt=\"New upload\"\n                ></img>\n              )}\n            </div>\n          </div>\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n\n        <div>\n          <Link to={`/viewprojects/${this.props.selectedStudio}`}>\n            <button className=\"button-back\">Back to projects</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport StudioService from \"./StudioService\";\nimport { Link } from \"react-router-dom\";\nimport PhotoService from \"../PhotoService\";\nimport \"./EditStudio.css\";\n\nexport default class EditStudio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studioname: this.props.studio.studioname,\n      error: null,\n      success: false,\n      imgPath: \"\"\n    };\n    this.service = new StudioService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const studioname = this.state.studioname;\n    const image = this.state.imgPath;\n    const id = this.props.studio._id;\n\n    this.service\n      .editStudio(id, studioname, image)\n      .then(response => {\n        this.setState({\n          studioname: studioname,\n          imgPath: image,\n          success: true,\n          error: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.image_url\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  checkToSend() {\n    if (!this.state.studioname || !this.state.imgPath) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"edit-studio\">\n        <h2>Edit studio:</h2>\n\n        <form className=\"edit-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"edit-studio-form\">\n            <div className=\"edit-studio-info\">\n              <label className=\"edit-label\">Studio name:</label>\n              <input\n                type=\"text\"\n                name=\"studioname\"\n                value={this.state.studioname}\n                onChange={e => this.handleChange(e)}\n              />\n\n              <label className=\"edit-label\">Studio image:</label>\n              <label htmlFor=\"uploader\" className=\"fake-uploader\">\n                <img\n                  src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1571321408/upload_1_uwjkbg.png\"\n                  alt=\"arrow\"\n                ></img>\n              </label>\n              <input\n                className=\"inputfile\"\n                type=\"file\"\n                id=\"uploader\"\n                name=\"imageUrl\"\n                onChange={e => this.handleFileUpload(e)}\n              />\n            </div>\n            <div className=\"edit-studio-image\">\n              {this.state.imgPath && (\n                <img\n                  className=\"new-upload-img\"\n                  src={this.state.imgPath}\n                  alt=\"New upload\"\n                ></img>\n              )}\n            </div>\n          </div>\n\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n\n        <div>\n          <Link to={`/viewstudios`}>\n            <button className=\"button-back\">Back to projects</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport AuthService from \"./components/auth/AuthService\";\nimport UserService from \"./components/contents/User/UserService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.css\";\nimport ViewStudios from \"./components/contents/Studio/ViewStudios\";\nimport ViewCalendar from \"./components/calendar/ViewCalendar\";\nimport ViewProjects from \"./components/contents/Project/ViewProjects\";\nimport ViewTasks from './components/contents/Task/ViewTasks'\nimport Profile from \"./components/contents/User/Profile\";\nimport EditProfile from './components/contents/User/EditProfile';\nimport EditProject from './components/contents/Project/EditProject'\nimport EditStudio from \"./components/contents/Studio/EditStudio\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: null,\n      projecttoedit: {},\n      selectedStudio: \"\",\n      studiotoedit: {},\n    };\n    this.service = new AuthService();\n    this.serviceUser = new UserService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  deleteUser() {\n    let userDeletion = prompt(\"Type 'delete' to confirm\");\n    if (userDeletion === \"delete\"){\n      this.serviceUser.deleteUser().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n    }\n  }\n\n  \n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser=()=> {\n     this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  editProject = (project) => {\n    this.setState({...this.state, projecttoedit: project})\n  }\n\n  editStudio = (studio) => {\n    \n    this.setState({...this.state, studiotoedit: studio})\n  }\n\n  selectedStudio=(id)=>{\n    this.setState({...this.state,selectedStudio:id})\n  }\n\n  render() {\n    // console.log(this.state)\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n          <div className=\"App\">\n            <header>\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/viewcalendar\"\n                render={() => <ViewCalendar />}\n              />\n              <Route exact path=\"/viewstudios\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route exact path=\"/home\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route exact path=\"/\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route\n                exact\n                path=\"/profile\"\n                render={() => <Profile user={this.state.loggedInUser} deleteUser={() => this.deleteUser()} />}\n              />\n              <Route exact path=\"/editprofile\" render={() => <EditProfile user={this.state.loggedInUser} fetchUser={this.fetchUser}/>} />\n              <Route\n                path=\"/viewprojects/:id\"\n                render={props => <ViewProjects {...props} editProject={this.editProject}/>}\n              />\n              <Route\n                path=\"/editproject/:id\"\n                render={(props) => <EditProject {...props} project={this.state.projecttoedit} selectedStudio={this.state.selectedStudio}/>}\n              />\n              <Route\n                path=\"/editstudio/:id\"\n                render={(props) => <EditStudio {...props} studio={this.state.studiotoedit}/>}\n              />\n              <Route\n                path=\"/viewtasks/:id\"\n                render={(props) => <ViewTasks {...props} selectedStudio={this.state.selectedStudio}/>}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => <Login getUser={this.getUser} />}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}