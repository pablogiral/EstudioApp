{"version":3,"sources":["components/auth/AuthService.js","components/contents/User/UserService.js","components/auth/Signup.js","components/auth/Login.js","components/navbar/Navbar.js","components/contents/Studio/StudioService.js","components/contents/Studio/CreateStudio.js","components/contents/Studio/Studio.js","components/contents/Studio/ViewStudios.js","components/calendar/Calendar.js","components/calendar/ViewCalendar.js","components/contents/Project/ProjectService.js","components/contents/Project/Project.js","components/contents/Project/CreateProject.js","components/contents/SearchBar/SearchBar.js","components/contents/Project/ViewProjects.js","components/contents/Task/Task.js","components/contents/Task/ViewTasks.js","components/contents/User/Profile.js","components/contents/User/EditProfile.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","email","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","UserService","deleteUser","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","className","onSubmit","type","onChange","e","to","Component","Login","Navbar","handleLogout","loggedInUser","src","alt","onClick","userInSession","StudioService","studioname","allStudios","oneStudio","studioID","CreateStudio","getStudio","placeholder","Studio","studio","studioimage","projects","length","_id","ViewStudios","studioObj","newArray","studios","push","getAllStudios","Array","isArray","Fragment","map","key","MONTH_LABELS","Calendar","startDate","endDate","render","disableDates","date","Date","getTime","range","monthLabels","setDate","getDate","ViewCalendar","ProjectService","projectName","allProjects","id","Project","console","log","project","tasks","projectimage","bandname","filter","CreateProject","projectname","bandName","belongsTo","urlId","getProject","saveProject","err","SearchBar","updateSearchFormData","viewProjects","projectsClean","serviceStudio","match","params","search","projectsSearch","toLowerCase","includes","updateSearch","Task","checked","task","done","updateTaskValue","style","textDecoration","moment","createdAt","format","ViewTasks","newTask","tasksFromBackend","projectID","taskToUpdate","newDoneState","find","URL","allTasks","setNewTaskValue","addNewTask","Profile","image","Moment","created_at","EditProfile","newName","newEmail","App","userObj","serviceUser","fetchUser","prompt","exact","path","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cd36f53.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email) => {\n    return this.service.post('/signup', {username, password, email})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import axios from \"axios\";\n\nclass UserService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  deleteUser = () => {\n    return this.service.post('/deleteUser')\n    .then(response => response.data);\n  }\n}\n\nexport default UserService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport \"./Login-signup.css\";\n\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n\n    \n    this.service.signup(username, password, email)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div className=\"login-signup\">\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"LSlabel\">Username:</label>\n            <input className=\"LSinput\" type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset className=\"align\">\n            <label className=\"LSlabel\">Email:</label>\n            <input className=\"LSinput\" type=\"text\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label className=\"LSlabel\">Password:</label>\n            <input className=\"LSinput\" type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input className=\"LSbutton\" type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n\n        <span className=\"LStext\">Allready a  user? <Link className=\"LStextLink\" to=\"/login\">login</Link></span>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport AuthService from \"./AuthService\";\nimport \"./Login-signup.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"login-signup\">\n        <h3>Login to your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"LSlabel\">Username:</label>\n            <input className=\"LSinput\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label className=\"LSlabel\">Password:</label>\n            <input className=\"LSinput\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input className=\"LSbutton\" type=\"submit\" value=\"Login\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      \n        <span className=\"LStext\">Not a  user? <Link className=\"LStextLink\" to=\"/signup\">Signup</Link></span>\n      \n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: {} };\n    this.service = new AuthService();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // console.log(props);\n    return (state.loggedInUser = props.userInSession);\n    // this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    // console.log(this.state.loggedInUser);\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            {/* <div className=\"navbar-element\">\n              <Link to={\"/viewcalendar\"}>Calendar</Link>\n            </div> */}\n            <div className=\"navbar-element\">\n              <Link to={\"/viewstudios\"}>Home</Link>\n            </div>\n          </div>\n          <div className=\"navbar-block-right\">\n            <div className=\"navbar-element\">\n              <Link to={\"/profile\"}>\n                {this.state.loggedInUser.username}'s profile\n              </Link>\n            </div>\n            <div className=\"navbar-element\">\n              <Link to={\"/login\"} onClick={this.handleLogout}>\n                Logout\n              </Link>\n            </div>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            </div>\n            <div className=\"navbar-block-right\">\n              <div className=\"navbar-element\">\n                <Link to=\"/signup\">Signup</Link>\n              </div>\n              <div className=\"navbar-element\">\n                <Link to=\"/login\">Login</Link>\n              </div>\n            </div>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nclass StudioService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/studioroutes`,\n      withCredentials: true\n    });\n  }\n\n  create = studioname => {\n    return this.service\n      .post(\"/studiocreate\", { studioname })\n      .then(response => response.data);\n  };\n\n  allStudios = () => {\n    return this.service.get('/allStudios')\n    .then(response => response.data);\n  }\n\n  oneStudio = (studioID) => {\n    return this.service.get(`/getStudio/${studioID}`)\n    .then(response => response.data);\n  }\n}\n\nexport default StudioService;\n","import React, { Component } from \"react\";\nimport StudioService from \"./StudioService\";\nimport './CreateStudio.css'\nexport default class CreateStudio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studioname: \"\"\n    };\n    this.service = new StudioService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const studioname = this.state.studioname;\n    this.service\n      .create(studioname)\n      .then(response => {\n        this.setState({\n          studioname: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getStudio(response);\n      })\n      .catch(error => {\n        this.setState({\n          studioname: studioname,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    // console.log(this.state)\n    return (\n      <div className=\"createStudio\">\n        <h3>Create your studio:</h3>\n\n        <form className=\"create-form\" onSubmit={this.handleFormSubmit}>\n          <fieldset className=\"create-form\">\n            \n            <input\n              type=\"text\"\n              name=\"studioname\"\n              placeholder=\"Enter your studio's name\"\n              value={this.state.studioname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"create\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Studio.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Studio extends Component {\n  render() {\n    return (\n      <div className=\"studioCard\">\n        <img\n          src={this.props.studio.studioimage}\n          alt={this.props.studio.studioname}\n        />\n        <h2>{this.props.studio.studioname}</h2>\n        <h4>Open projects: {this.props.studio.projects.length} </h4>\n        <Link to={`/viewprojects/${this.props.studio._id}`}>\n          <button>See projects</button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport CreateStudio from './CreateStudio';\nimport Studio from './Studio';\nimport StudioService from './StudioService';\nimport './viewStudio.css'\n\nexport default class ViewStudios extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      studios: [],\n    }\n    this.service = new StudioService();\n  }\n\n  getStudio = studioObj => {\n    let newArray = [...this.state.studios];\n    newArray.push(studioObj);\n    this.setState({\n      ...this.state, studios: newArray\n    });\n  };\n\n  componentDidMount() {\n    this.getAllStudios();\n  }\n\n  getAllStudios () {\n    this.service.allStudios()\n    .then(allStudios=>{\n      // console.log(allStudios)\n      this.setState({...this.state, studios: allStudios})\n\n    })\n  }\n\n  render() {\n    // console.log(this.state)\n    if (!Array.isArray(this.state.studios)) {\n      return ( \n      <div>\n        <CreateStudio getStudio={this.getStudio} />\n      </div>\n      )\n    }\n    else {\n      return (\n        <React.Fragment>\n        <div className=\"studioView\">\n          {\n            this.state.studios.map(studio => <Studio key={studio._id} studio={studio} />)\n          }\n        </div>\n        <CreateStudio getStudio={this.getStudio}></CreateStudio>\n        </React.Fragment>\n      )\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactLightCalendar from '@lls/react-light-calendar'\nimport '@lls/react-light-calendar/dist/index.css'\n\n// const DAY_LABELS = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche']\nconst MONTH_LABELS = ['Enero', 'Febrero', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aûot', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props)\n    const date = new Date()\n    const startDate = date.getTime()\n    this.state = {\n      startDate, // Today\n      endDate: new Date(startDate).setDate(date.getDate() + 0) // Today + 6 days\n    }\n  }\n\n  onChange = (startDate, endDate) => {\n    // console.log(startDate, endDate)\n  this.setState({ startDate, endDate })}\n\n  render = () => {\n    const { startDate, endDate } = this.state\n\n    return (\n        <ReactLightCalendar disableDates={date => date < new Date().getTime()}  startDate={startDate} endDate={endDate} onChange={this.onChange} range monthLabels={MONTH_LABELS}/>\n    )\n  }\n}\n\nexport default Calendar;","import React, { Component } from 'react'\nimport Calendar from './Calendar'\n\nexport default class ViewCalendar extends Component {\n  render() {\n    return (\n      <div>\n         <Calendar></Calendar>\n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/projectRoutes`,\n      withCredentials: true\n    });\n  }\n\n  create = projectName => {\n    return this.service\n      .post(\"/newProject\", { projectName })\n      .then(response => response.data);\n  };\n\n  allProjects = id => {\n    return this.service\n      .get(`/allProjects/${id}`)\n      .then(response => response.data);\n  };\n}\n\nexport default ProjectService;\n","import React, { Component } from 'react'\nimport './Project.css'\nimport { Link } from \"react-router-dom\"\n\nexport default class Project extends Component {\n  // loadProject(id){\n  //   console.log(id)\n  // }\n  render() {\n    console.log(this.props.project.tasks)\n    return (\n      <div className=\"projectCard\">\n        <img src={this.props.project.projectimage} alt={this.props.project.name}/>\n        <h2>{this.props.project.name}</h2>\n        <h3>{this.props.project.bandname}</h3>\n        <h4>Pending tasks: {this.props.project.tasks.filter(()=>{})}</h4>\n        {/* <h6>Open tasks: {this.props.project.tasks.length} </h6> */}\n        <Link to={`/viewtasks/${this.props.project._id}`}><button>See tasks</button></Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\n\nexport default class CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: \"\",\n      bandname: \"\"\n    };\n    this.service = new ProjectService();\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const projectName = this.state.projectname;\n    const bandName = this.state.bandname;\n    this.service\n      .create({\n        projectname: projectName,\n        bandname: bandName,\n        belongsTo: this.props.urlId\n      })\n      .then(response => {\n        this.setState({\n          ...this.state,\n          projectname: \"\",\n          bandname: \"\"\n        });\n        this.props.getProject(response.saveProject);\n      })\n      .catch(err => {\n        this.setState({\n          projectname: projectName,\n          bandname: bandName,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h3>Create a new project:</h3>\n\n          <form onSubmit={this.handleFormSubmit}>\n            <fieldset>\n              <label>Project name:</label>\n              <input\n                type=\"text\"\n                name=\"projectname\"\n                value={this.state.projectname}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n            <fieldset>\n              <label>Band name:</label>\n              <input\n                type=\"text\"\n                name=\"bandname\"\n                value={this.state.bandname}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n\n            <input type=\"submit\" value=\"create\" />\n          </form>\n\n          <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <form className=\"search-form\" id=\"test\">\n        <input\n          type=\"search\"\n          name=\"foodName\"\n          placeholder=\"Search here\"\n          onChange={e => this.props.updateSearchFormData(e)}\n        ></input>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport StudioService from \"./../Studio/StudioService\";\nimport Project from \"./Project\";\nimport CreateProject from \"./CreateProject\";\nimport \"./viewProjects.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Link } from \"react-router-dom\"\n\nexport default class viewProjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      projectsClean: [],\n      studio: {}\n    };\n    this.service = new ProjectService();\n    this.serviceStudio = new StudioService();\n  }\n\n  getProject = project => {\n    // console.log(project);\n    let newArray = [...this.state.projects];\n    newArray.push(project);\n    this.setState({\n      ...this.state,\n      projects: newArray,\n      projectsClean: newArray\n    });\n  };\n\n  componentDidMount() {\n    // this.getAllProjects();\n    this.getStudio();\n    // this.getProject()\n  }\n\n  // getAllProjects() {\n  //   this.service.allProjects(this.props.match.params.id).then(allProjects => {\n  //     this.setState({\n  //       ...this.state,\n  //       projects: allProjects\n  //     });\n  //   });\n  // }\n\n  async getStudio() {\n    const studio = await this.serviceStudio.oneStudio(\n      this.props.match.params.id\n    );\n    this.setState({\n      ...this.state,\n      studio: studio,\n      projectsClean: studio.projects,\n      projects: studio.projects\n      // projects: allProjects\n    });\n  }\n\n  updateSearch(e) {\n    let search = e.target.value;\n    let projectsSearch = [...this.state.projectsClean];\n    // console.log()\n    this.setState({\n      ...this.state,\n      projects: projectsSearch.filter(project =>\n        project.name.toLowerCase().includes(search.toLowerCase())\n      )\n    });\n  }\n\n  render() {\n    // console.log(this.state.projects)\n    if (!!this.state.studio) {\n      if (!!this.state.projects) {\n        return (\n          <React.Fragment>\n            <SearchBar updateSearchFormData={e => this.updateSearch(e)}></SearchBar>\n            <div className=\"projectView\">\n              {this.state.projects.map(project => (\n                <Project key={project._id} project={project}></Project>\n              ))}\n            </div>\n            <div>\n              <CreateProject\n                getProject={response => this.getProject(response)}\n                urlId={this.props.match.params.id}\n              ></CreateProject>\n            </div>\n            <div>\n              <Link to={\"/viewstudios\"}>Back to studios</Link>\n            </div>\n          </React.Fragment>\n        );\n      }\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./Task.css\";\n\nexport default class Task extends Component {\n  render() {\n    return (\n      <div className=\"taskItemComponent\">\n        <input\n          type=\"checkbox\"\n          checked={this.props.task.done}\n          onChange={() => this.props.updateTaskValue(this.props.task)}\n        ></input>\n        <span style={{textDecoration: this.props.task.done ? \"line-through\" : \"\"}}>{moment(this.props.task.createdAt).format(\"DD/MM hh:mm\")}</span>\n        <span style={{textDecoration: this.props.task.done ? \"line-through\" : \"\"}}>{this.props.task.name}</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Task from './Task'\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"\nimport './ViewTasks.css'\nexport default class ViewTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      newTask: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // axios.get(`http://localhost:3001/api/taskRoutes/allTasks/`).then(tasksFromBackend => {\n    //   // console.log(tasksFromBackend.data._id)\n    //   this.setState({\n    //     ...this.state,\n    //     tasks: tasksFromBackend.data\n    //   });\n    // });\n\n    axios.get(`${process.env.REACT_APP_API_URL}/api/taskRoutes/projectTasks/${this.props.match.params.id}`)\n    .then(tasksFromBackend => {\n      console.log(tasksFromBackend.data)\n      this.setState({\n        ...this.state,\n        tasks: tasksFromBackend.data.tasks\n      });\n    });\n  }\n\n  addNewTask() {\n    if (this.state.newTask === \"\") return;\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/taskRoutes/newTask`, { name: this.state.newTask, projectID: this.props.match.params.id })\n      .then(tasksFromBackend => {\n        this.setState({\n          ...this.state,\n          tasks: tasksFromBackend.data.tasks,\n          newTask: \"\"\n        });\n      });\n  }\n\n  setNewTaskValue(e) {\n    this.setState({\n      ...this.state,\n      newTask: e.target.value\n    });\n  }\n\n  updateTaskValue(taskToUpdate) {\n    // this clones the tasks from the state\n    let tasks = [...this.state.tasks];\n\n    // this finds the selected task to be modified\n    let taskToUpdateFromState = tasks.find(task => task._id === taskToUpdate._id);\n    let newDoneState = !taskToUpdateFromState.done\n\n    let URL = `${process.env.REACT_APP_API_URL}/api/taskRoutes/task/${taskToUpdate._id}/done/${newDoneState}/project/${this.props.match.params.id}`\n\n    // console.log(URL)\n    axios\n      .get(\n        URL\n      )\n      .then(allTasks => {\n        // this re-updates the state with updated object, hence updating the checkbox\n        this.setState({\n          ...this.state,\n          tasks: allTasks.data.tasks\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\"tasks\">\n        <header>\n          <input\n            type=\"text\"\n            value={this.state.newTask}\n            onChange={e => this.setNewTaskValue(e)}\n            placeholder=\"Please specify your new task\"\n          ></input>\n          <button onClick={() => this.addNewTask()}>Add new task</button>\n        </header>\n        {this.state.tasks.filter(task => !task.done).length > 0 && (\n          <div>\n            <h1 className=\"task-list\">\n              Total tasks to do -{\" \"}\n              {this.state.tasks.filter(task => !task.done).length}\n            </h1>\n            <section className=\"task-list\" >\n              {this.state.tasks\n                .filter(task => !task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length > 0 && (\n          <div>\n            <h1 className=\"task-list\">\n              Total tasks done -{\" \"}\n              {this.state.tasks.filter(task => task.done).length}\n            </h1>\n            <section className=\"task-list\">\n              {this.state.tasks\n                .filter(task => task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length === 0 && (\n          <h1>No tasks done</h1>\n        )}\n        <div>\n          <Link to={`/viewprojects/${this.props.match.params.id}`}>Back to projects</Link>\n        </div>\n      </div>\n      // <h1>hola</h1>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\"\nimport \"./Profile.css\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user\n    };\n  }\n\n  render() {\n    // console.log(this.state.user);\n    return (\n      <div className=\"center\">\n        <div className=\"profileCard\">\n          <img src={this.state.user.image} alt=\"profile pic\"></img>\n          <div>\n            <h1>Hello {this.state.user.username}!</h1>\n            <h3>email: {this.state.user.email}</h3>\n            <h3>User since: {Moment(this.state.user.created_at).format('yyyy/mm/dd')}</h3>\n            <div>\n              <Link to={'/editprofile'}><button props={this.state.user}>Edit your profile</button></Link>\n              <button onClick={() => this.props.deleteUser()}>\n                Delete your profile\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class EditProfile extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      user: this.props.user,\n      newName: \"\",\n      newEmail: \"\",\n    }\n    // console.log(this.state)\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    console.log(this.state.newEmail)\n    return (\n      <div>\n        <h3>Edit your profile:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              placeholder={this.state.user.username}\n              name=\"newName\"\n              value={this.state.newName}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Email:</label>\n            <input\n              type=\"text\"\n              placeholder={this.state.user.email}\n              name=\"newEmail\"\n              value={this.state.newEmail}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          {/* <fieldset>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.user.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset> */}\n\n          <input type=\"submit\" value=\"Save\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport AuthService from \"./components/auth/AuthService\";\nimport UserService from \"./components/contents/User/UserService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.css\";\n// import Calendar from \"./components/calendar/Calendar\";\nimport ViewStudios from \"./components/contents/Studio/ViewStudios\";\nimport ViewCalendar from \"./components/calendar/ViewCalendar\";\nimport ViewProjects from \"./components/contents/Project/ViewProjects\";\nimport ViewTasks from './components/contents/Task/ViewTasks'\nimport Profile from \"./components/contents/User/Profile\";\nimport EditProfile from './components/contents/User/EditProfile';\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n    this.serviceUser = new UserService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  deleteUser() {\n    let userDeletion = prompt(\"Type 'delete' to confirm\");\n    if (userDeletion === \"delete\"){\n      this.serviceUser.deleteUser().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n    }\n  }\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  render() {\n    // console.log(this.state)\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n          <div className=\"App\">\n            <header>\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/viewcalendar\"\n                render={() => <ViewCalendar />}\n              />\n              <Route exact path=\"/viewstudios\" render={() => <ViewStudios />} />\n              <Route exact path=\"/home\" render={() => <ViewStudios />} />\n              <Route exact path=\"/\" render={() => <ViewStudios />} />\n              <Route\n                exact\n                path=\"/profile\"\n                render={() => <Profile user={this.state.loggedInUser} deleteUser={() => this.deleteUser()} />}\n              />\n              <Route exact path=\"/editprofile\" render={() => <EditProfile user={this.state.loggedInUser}/>} />\n              <Route\n                path=\"/viewprojects/:id\"\n                render={props => <ViewProjects {...props} />}\n              />\n              <Route\n                path=\"/viewtasks/:id\"\n                render={(props) => <ViewTasks {...props}/>}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => <Login getUser={this.getUser} />}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}