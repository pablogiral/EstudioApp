{"version":3,"sources":["components/auth/AuthService.js","components/contents/User/UserService.js","components/auth/Signup.js","components/auth/Login.js","components/navbar/Navbar.js","components/contents/Studio/StudioService.js","components/contents/Studio/CreateStudio.js","components/contents/Studio/Studio.js","components/contents/Studio/ViewStudios.js","components/calendar/Calendar.js","components/calendar/ViewCalendar.js","components/contents/Project/ProjectService.js","components/contents/Project/Project.js","components/contents/Project/CreateProject.js","components/contents/SearchBar/SearchBar.js","components/contents/Project/ViewProjects.js","components/contents/Task/Task.js","components/contents/Task/ViewTasks.js","components/contents/User/Profile.js","components/contents/PhotoService.js","components/contents/User/EditProfile.js","components/contents/Project/EditProject.js","components/contents/Studio/EditStudio.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","email","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","UserService","deleteUser","editUser","image","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","className","onSubmit","type","onChange","e","to","Component","Login","Navbar","handleLogout","loggedInUser","src","alt","onClick","userInSession","StudioService","studioname","allStudios","oneStudio","studioID","deleteStudio","studioToDelete","_id","editStudio","id","CreateStudio","getStudio","placeholder","Studio","handleClic","selected","studio","studioimage","projects","length","editHandler","ViewStudios","studioObj","newArray","studios","push","getAllStudios","studioToDeleteFromState","filter","Array","isArray","map","key","MONTH_LABELS","Calendar","startDate","endDate","render","disableDates","date","Date","getTime","range","monthLabels","setDate","getDate","ViewCalendar","ProjectService","projectName","allProjects","editProject","projectID","projectname","bandname","comments","deleteProject","projectToDelete","Project","project","projectimage","CreateProject","bandName","belongsTo","urlId","getProject","saveProject","err","cols","rows","SearchBar","updateSearchFormData","viewProjects","projectsClean","serviceStudio","match","params","search","projectsSearch","toLowerCase","includes","projectToDeleteFromState","updateSearch","selectedStudio","Task","checked","task","done","updateTaskValue","style","textDecoration","moment","createdAt","format","deleteTask","ViewTasks","tasks","newTask","tasksFromBackend","taskToUpdate","newDoneState","find","URL","allTasks","taskToDelete","taskToDeleteFromState","setNewTaskValue","addNewTask","Profile","Moment","created_at","PhotoService","theFile","res","console","log","EditProfile","newName","newEmail","imgPath","success","handleFileUpload","uploadData","FormData","append","files","photoService","handleUpload","secure_url","disabled","checkToSend","EditProject","EditStudio","App","userObj","projecttoedit","studiotoedit","serviceUser","fetchUser","prompt","Fragment","exact","path","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a40b104e.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email) => {\n    return this.service.post('/signup', {username, password, email})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import axios from \"axios\";\n\nclass UserService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  deleteUser = () => {\n    return this.service.post('/deleteUser')\n    .then(response => response.data);\n  }\n\n  editUser = (username, email, image) => {\n    return this.service.post('/updateUser', {username, email, image})\n    .then(response => response.data);\n  }\n\n  \n\n}\n\nexport default UserService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport \"./Login-signup.css\";\n\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n\n    \n    this.service.signup(username, password, email)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div className=\"login-signup\">\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"LSlabel\">Username:</label>\n            <input className=\"LSinput\" type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset className=\"align\">\n            <label className=\"LSlabel\">Email:</label>\n            <input className=\"LSinput\" type=\"text\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label className=\"LSlabel\">Password:</label>\n            <input className=\"LSinput\" type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input className=\"LSbutton\" type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n\n        <span className=\"LStext\">Allready a  user? <Link className=\"LStextLink\" to=\"/login\">login</Link></span>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport AuthService from \"./AuthService\";\nimport \"./Login-signup.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"login-signup\">\n        <h3>Login to your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"LSlabel\">Username:</label>\n            <input className=\"LSinput\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label className=\"LSlabel\">Password:</label>\n            <input className=\"LSinput\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input className=\"LSbutton\" type=\"submit\" value=\"Login\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      \n        <span className=\"LStext\">Not a  user? <Link className=\"LStextLink\" to=\"/signup\">Signup</Link></span>\n      \n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: {} };\n    this.service = new AuthService();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    \n    return (state.loggedInUser = props.userInSession);\n    \n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n   \n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            {/* <div className=\"navbar-element\">\n              <Link to={\"/viewcalendar\"}>Calendar</Link>\n            </div> */}\n            <div className=\"navbar-element\">\n              <Link to={\"/viewstudios\"}>Home</Link>\n            </div>\n          </div>\n          <div className=\"navbar-block-right\">\n            <div className=\"navbar-element\">\n              <Link to={\"/profile\"}>\n                {this.state.loggedInUser.username}'s profile\n              </Link>\n            </div>\n            <div className=\"navbar-element\">\n              <Link to={\"/login\"} onClick={this.handleLogout}>\n                Logout\n              </Link>\n            </div>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <div className=\"navbar-block-left\">\n            <div>\n              <img src=\"https://res.cloudinary.com/dmzi2js9s/image/upload/v1570991057/Studio%20Manager/Studio_manager_2_d7ssm2.png\" alt=\"studio manager logo\"/>\n            </div>\n            </div>\n            <div className=\"navbar-block-right\">\n              <div className=\"navbar-element\">\n                <Link to=\"/signup\">Signup</Link>\n              </div>\n              <div className=\"navbar-element\">\n                <Link to=\"/login\">Login</Link>\n              </div>\n            </div>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nclass StudioService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/studioroutes`,\n      withCredentials: true\n    });\n  }\n\n  create = studioname => {\n    return this.service\n      .post(\"/studiocreate\", { studioname })\n      .then(response => response.data);\n  };\n\n  allStudios = () => {\n    return this.service.get('/allStudios')\n    .then(response => response.data);\n  }\n\n  oneStudio = (studioID) => {\n    return this.service.get(`/getStudio/${studioID}`)\n    .then(response => response.data);\n  }\n\n  deleteStudio = (studioToDelete) => {\n    return this.service.post(`/deleteStudio/${studioToDelete._id}`)\n    .then(response => response.data);\n  }\n\n  editStudio = (id, studioname, image) => {\n    return this.service.post(`/editStudio/${id}`, {studioname, image})\n    .then(response => response.data);\n  }\n}\n\nexport default StudioService;\n","import React, { Component } from \"react\";\nimport StudioService from \"./StudioService\";\nimport \"./CreateStudio.css\";\nexport default class CreateStudio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studioname: \"\"\n    };\n    this.service = new StudioService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const studioname = this.state.studioname;\n    this.service\n      .create(studioname)\n      .then(response => {\n        this.setState({\n          studioname: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getStudio(response);\n      })\n      .catch(error => {\n        this.setState({\n          studioname: studioname,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"createStudio\">\n        <h3>Create your studio:</h3>\n\n        <form className=\"create-form\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <input\n              type=\"text\"\n              name=\"studioname\"\n              placeholder=\"Enter your studio's name\"\n              value={this.state.studioname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"create\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Studio.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Studio extends Component {\n\n  handleClic = e => {\n    this.props.selected(this.props.studio._id);\n  };\n\n  editHandler(e){\n    this.props.editStudio(this.props.studio)\n  }\n\n  render() {\n    return (\n      <div className=\"studioCard\">\n        <img\n          src={this.props.studio.studioimage}\n          alt={this.props.studio.studioname}\n        />\n        <h2>{this.props.studio.studioname}</h2>\n        <h4>Open projects: {this.props.studio.projects.length} </h4>\n        <Link to={`/viewprojects/${this.props.studio._id}`}>\n          <button\n            onClick={e => {\n              this.handleClic(e);\n            }}\n          >\n            See projects\n          </button>\n        </Link>\n        <Link to={`/editstudio/${this.props.studio._id}`}>\n          <button onClick={e => this.editHandler(e)}>Edit</button>\n        </Link>\n        <button onClick={() => this.props.deleteStudio(this.props.studio)}>\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CreateStudio from \"./CreateStudio\";\nimport Studio from \"./Studio\";\nimport StudioService from \"./StudioService\";\nimport \"./viewStudio.css\";\n\nexport default class ViewStudios extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studios: []\n    };\n    this.service = new StudioService();\n  }\n\n  getStudio = studioObj => {\n    let newArray = [...this.state.studios];\n    newArray.push(studioObj);\n    this.setState({\n      ...this.state,\n      studios: newArray\n    });\n  };\n\n  componentDidMount() {\n    this.getAllStudios();\n  }\n\n  getAllStudios() {\n    this.service.allStudios().then(allStudios => {\n      this.setState({ ...this.state, studios: allStudios });\n    });\n  }\n\n  deleteStudio(studioToDelete) {\n    \n    let studios = [...this.state.studios];\n    let studioToDeleteFromState = studios.filter(\n      studio => studio._id !== studioToDelete._id\n    );\n    this.setState({\n      ...this.state,\n      studios: studioToDeleteFromState\n    });\n    this.service.deleteStudio(studioToDelete)\n  }\n\n  render() {\n    \n    if (!Array.isArray(this.state.studios)) {\n      return (\n        <div>\n          <CreateStudio getStudio={this.getStudio} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"viewStudio\">\n          <div className=\"studioView\">\n            {this.state.studios.map(studio => (\n              <Studio\n                key={studio._id}\n                editStudio={this.props.editStudio}\n                selected={this.props.selected}\n                studio={studio}\n                deleteStudio={studioToDelete =>\n                  this.deleteStudio(studioToDelete)\n                }\n              />\n            ))}\n          </div>\n\n          <CreateStudio getStudio={this.getStudio}></CreateStudio>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactLightCalendar from '@lls/react-light-calendar'\nimport '@lls/react-light-calendar/dist/index.css'\n\n// const DAY_LABELS = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche']\nconst MONTH_LABELS = ['Enero', 'Febrero', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aûot', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props)\n    const date = new Date()\n    const startDate = date.getTime()\n    this.state = {\n      startDate, // Today\n      endDate: new Date(startDate).setDate(date.getDate() + 0) // Today + 6 days\n    }\n  }\n\n  onChange = (startDate, endDate) => {\n    \n  this.setState({ startDate, endDate })}\n\n  render = () => {\n    const { startDate, endDate } = this.state\n\n    return (\n        <ReactLightCalendar disableDates={date => date < new Date().getTime()}  startDate={startDate} endDate={endDate} onChange={this.onChange} range monthLabels={MONTH_LABELS}/>\n    )\n  }\n}\n\nexport default Calendar;","import React, { Component } from 'react'\nimport Calendar from './Calendar'\n\nexport default class ViewCalendar extends Component {\n  render() {\n    return (\n      <div>\n         <Calendar></Calendar>\n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/projectRoutes`,\n      withCredentials: true\n    });\n  }\n\n  create = projectName => {\n    return this.service\n      .post(\"/newProject\", { projectName })\n      .then(response => response.data);\n  };\n\n  allProjects = id => {\n    return this.service\n      .get(`/allProjects/${id}`)\n      .then(response => response.data);\n  };\n\n  editProject = (projectID, projectname, bandname, comments, image) => {\n    return this.service.post(`/editProject/${projectID}`, {projectname, bandname, comments, image})\n    .then(response => response.data);\n  }\n\n  deleteProject = (projectToDelete) => {\n    return this.service.post(`/deleteProject/${projectToDelete._id}`)\n    .then(response => response.data);\n  }\n}\n\nexport default ProjectService;\n","import React, { Component } from \"react\";\nimport \"./Project.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Project extends Component {\n\n  editHandler(e){\n    this.props.editProject(this.props.project)\n  }\n  \n  render() {\n    return (\n      <div className=\"projectCard\">\n        <img\n          src={this.props.project.projectimage}\n          alt={this.props.project.name}\n        />\n        <h2>{this.props.project.name}</h2>\n        <h3>{this.props.project.bandname}</h3>\n\n        <Link to={`/viewtasks/${this.props.project._id}`}>\n          <button>See tasks</button>\n        </Link>\n\n        <div className=\"horizontal-buttons\">\n\n          <Link to={`/editproject/${this.props.project._id}`}>\n            <button onClick={(e)=>this.editHandler(e)}>Edit</button>\n          </Link>\n\n          <button onClick={() => this.props.deleteProject(this.props.project)}>\n            Delete\n          </button>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport \"./CreateProject.css\";\n\nexport default class CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: \"\",\n      bandname: \"\",\n      comments: \"\"\n    };\n    this.service = new ProjectService();\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const projectName = this.state.projectname;\n    const bandName = this.state.bandname;\n    const comments = this.state.comments;\n\n    this.service\n      .create({\n        projectname: projectName,\n        bandname: bandName,\n        comments: comments,\n        belongsTo: this.props.urlId\n      })\n      .then(response => {\n        this.setState({\n          ...this.state,\n          projectname: \"\",\n          bandname: \"\",\n          comments: \"\"\n        });\n        this.props.getProject(response.saveProject);\n      })\n      .catch(err => {\n        this.setState({\n          projectname: projectName,\n          bandname: bandName,\n          comments: comments,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"createProject\">\n        <h3>Create a new project:</h3>\n\n        <form className=\"create-project-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"horizontal-form\">\n            <fieldset>\n              {/* <label>Project name:</label> */}\n              <input\n                type=\"text\"\n                placeholder=\"Project name\"\n                name=\"projectname\"\n                value={this.state.projectname}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n            <fieldset>\n              {/* <label>Band name:</label> */}\n              <input\n                type=\"text\"\n                placeholder=\"Band name\"\n                name=\"bandname\"\n                value={this.state.bandname}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n          </div>\n          <fieldset>\n            {/* <label>Comments:</label> */}\n            <textarea\n              placeholder=\"Comments...\"\n              cols=\"50\"\n              rows=\"8\"\n              name=\"comments\"\n              value={this.state.comments}\n              onChange={e => this.handleChange(e)}\n            ></textarea>\n          </fieldset>\n\n          <input type=\"submit\" value=\"create\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <form className=\"search-form\" id=\"test\">\n        <input\n          type=\"search\"\n          name=\"projectSearch\"\n          placeholder=\"Search projects...\"\n          onChange={e => this.props.updateSearchFormData(e)}\n        ></input>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport StudioService from \"./../Studio/StudioService\";\nimport Project from \"./Project\";\nimport CreateProject from \"./CreateProject\";\nimport \"./viewProjects.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Link } from \"react-router-dom\";\n\nexport default class viewProjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      projectsClean: [],\n      studio: {}\n    };\n    this.service = new ProjectService();\n    this.serviceStudio = new StudioService();\n  }\n\n  getProject = project => {\n    let newArray = [...this.state.projects];\n    newArray.push(project);\n    this.setState({\n      ...this.state,\n      projects: newArray,\n      projectsClean: newArray\n    });\n  };\n\n  componentDidMount() {\n    this.getStudio();\n    // this.updateSearch();\n  }\n\n  async getStudio() {\n    const studio = await this.serviceStudio.oneStudio(\n      this.props.match.params.id\n    );\n    // console.log(studio);\n    this.setState({\n      ...this.state,\n      studio: studio,\n      projectsClean: studio.projects,\n      projects: studio.projects\n      // projects: allProjects\n    });\n  }\n\n  updateSearch(e) {\n    let search = e.target.value;\n    let projectsSearch = [...this.state.projectsClean];\n\n    this.setState({\n      ...this.state,\n      projects: projectsSearch.filter(project =>\n        project.name.toLowerCase().includes(search.toLowerCase())\n      )\n    });\n  }\n\n  deleteProject(projectToDelete) {\n    \n    let projects = [...this.state.projects];\n    let projectToDeleteFromState = projects.filter(\n      project => project._id !== projectToDelete._id\n    );\n    this.setState({\n      ...this.state,\n      projects: projectToDeleteFromState\n    });\n    this.service.deleteProject(projectToDelete);\n  }\n\n  render() {\n    \n    if (!!this.state.studio) {\n      if (!!this.state.projects) {\n        return (\n          <div className=\"viewProject\">\n            <SearchBar\n              className=\"search\"\n              updateSearchFormData={e => this.updateSearch(e)}\n            ></SearchBar>\n            <div className=\"projectView\">\n              {this.state.projects.map(project => (\n                <Project\n                  key={project._id}\n                  project={project}\n                  selected={this.props.selectedStudio}\n                  deleteProject={projectToDelete =>\n                    this.deleteProject(projectToDelete)\n                  }\n                  editProject={this.props.editProject}\n                ></Project>\n              ))}\n            </div>\n\n            <CreateProject\n              getProject={response => this.getProject(response)}\n              urlId={this.props.match.params.id}\n            ></CreateProject>\n\n            <div>\n              <Link to={\"/viewstudios\"}>Back to studios</Link>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./Task.css\";\n\nexport default class Task extends Component {\n  render() {\n    \n    return (\n      <div className=\"taskItemComponent\">\n        <input\n          type=\"checkbox\"\n          checked={this.props.task.done}\n          onChange={() => this.props.updateTaskValue(this.props.task)}\n        ></input>\n        <span style={{textDecoration: this.props.task.done ? \"line-through\" : \"\"}}>{moment(this.props.task.createdAt).format(\"DD/MM hh:mm\")}</span>\n        <span style={{textDecoration: this.props.task.done ? \"line-through\" : \"\"}}>{this.props.task.name}</span>\n        <button onClick={()=> this.props.deleteTask(this.props.task)}>Delete</button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Task from './Task'\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"\nimport './ViewTasks.css'\nexport default class ViewTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: \"\",\n      bandname: \"\",\n      comments: \"\",\n      projectimage: \"\",\n      tasks: [],\n      newTask: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/taskRoutes/projectTasks/${this.props.match.params.id}`)\n    .then(tasksFromBackend => {\n      // debugger\n      this.setState({\n        ...this.state,\n        tasks: tasksFromBackend.data.tasks,\n        bandname: tasksFromBackend.data.bandname,\n        projectname: tasksFromBackend.data.name,\n        comments: tasksFromBackend.data.comments,\n        projectimage: tasksFromBackend.data.projectimage\n      });\n    });\n  }\n\n  addNewTask() {\n    if (this.state.newTask === \"\") return;\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/taskRoutes/newTask`, { name: this.state.newTask, projectID: this.props.match.params.id })\n      .then(tasksFromBackend => {\n        this.setState({\n          ...this.state,\n          tasks: tasksFromBackend.data.tasks,\n          newTask: \"\"\n        });\n      });\n  }\n\n  setNewTaskValue(e) {\n    this.setState({\n      ...this.state,\n      newTask: e.target.value\n    });\n  }\n\n  updateTaskValue(taskToUpdate) {\n    // this clones the tasks from the state\n    let tasks = [...this.state.tasks];\n\n    // this finds the selected task to be modified\n    let taskToUpdateFromState = tasks.find(task => task._id === taskToUpdate._id);\n    let newDoneState = !taskToUpdateFromState.done\n\n    let URL = `${process.env.REACT_APP_API_URL}/api/taskRoutes/task/${taskToUpdate._id}/done/${newDoneState}/project/${this.props.match.params.id}`\n\n   \n    axios\n      .get(\n        URL\n      )\n      .then(allTasks => {\n        // this re-updates the state with updated object, hence updating the checkbox\n        this.setState({\n          ...this.state,\n          tasks: allTasks.data.tasks\n        });\n      });\n  }\n\n  deleteTask(taskToDelete) {\n    let tasks = [...this.state.tasks];\n    let taskToDeleteFromState  = tasks.filter(task => task._id !== taskToDelete._id);\n    this.setState({\n      ...this.state,\n      tasks: taskToDeleteFromState\n    })\n    axios.get(`${process.env.REACT_APP_API_URL}/api/taskRoutes/deleteTask/${taskToDelete._id}`)\n  }\n\n  render() {\n    \n    \n    return (\n      <div className=\"tasks\">\n        <section>\n          <img src={this.state.projectimage} alt=\"project\"/>\n          <h3>{this.state.projectname}</h3> - \n          <h3>{this.state.bandname}</h3>\n          <p>{this.state.comments}</p>\n        </section>\n        <section>\n          <input\n            type=\"text\"\n            value={this.state.newTask}\n            onChange={e => this.setNewTaskValue(e)}\n            placeholder=\"Please specify your new task\"\n          ></input>\n          <button onClick={() => this.addNewTask()}>Add new task</button>\n        </section>\n        {this.state.tasks.filter(task => !task.done).length > 0 && (\n          <div>\n            <h1 className=\"task-list\">\n              Total tasks to do -{\" \"}\n              {this.state.tasks.filter(task => !task.done).length}\n            </h1>\n            <section className=\"task-list\" >\n              {this.state.tasks\n                .filter(task => !task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                      deleteTask={task=> this.deleteTask(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length > 0 && (\n          <div>\n            <h1 className=\"task-list\">\n              Total tasks done -{\" \"}\n              {this.state.tasks.filter(task => task.done).length}\n            </h1>\n            <section className=\"task-list\">\n              {this.state.tasks\n                .filter(task => task.done)\n                .map(task => {\n                  return (\n                    <Task\n                      key={task._id}\n                      task={task}\n                      updateTaskValue={task => this.updateTaskValue(task)}\n                    ></Task>\n                  );\n                })}\n            </section>\n          </div>\n        )}\n\n        {this.state.tasks.filter(task => task.done).length === 0 && (\n          <h1>No tasks done</h1>\n        )}\n        <div>\n          <Link to={`/viewprojects/${this.props.selectedStudio}`}>Back to projects</Link>\n        </div>\n      </div>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\"\nimport \"./Profile.css\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"center\">\n        <div className=\"profileCard\">\n          <img src={this.state.user.image} alt=\"profile pic\"></img>\n          <div>\n            <h1>Hello {this.state.user.username}!</h1>\n            <h3>email: {this.state.user.email}</h3>\n            <h3>User since: {Moment(this.state.user.created_at).format('dddd DD MMM YYYY')}</h3>\n            <div>\n              <Link to={'/editprofile'}><button props={this.state.user}>Edit your profile</button></Link>\n              <button onClick={() => this.props.deleteUser()}>\n                Delete your profile\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n\nclass PhotoService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/photoRoutes`,\n      withCredentials: true\n    });\n  }\n\n  handleUpload(theFile) {\n    \n    return this.service\n      .post(\"/upload\", theFile)\n      .then(res => res.data)\n      .catch(err => console.log(err));\n  }\n\n}\n\nexport default PhotoService;","import React, { Component } from \"react\";\nimport UserService from \"./UserService\";\nimport PhotoService from \"../PhotoService\";\n\nexport default class EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      newName: this.props.user.username,\n      newEmail: this.props.user.email,\n      imgPath: \"\",\n      error: null,\n      success: false,\n      \n    };\n    this.service = new UserService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.newName;\n    const email = this.state.newEmail;\n    const image = this.state.imgPath;\n\n    this.service\n      .editUser(username, email, image)\n      .then(response => {\n        this.setState({\n          newName: username,\n          newEmail: email,\n          imgPath: image,\n          success: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.secure_url,\n          \n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  checkToSend() {\n    if (\n      !this.state.newName ||\n      !this.state.newEmail ||\n      !this.state.imgPath\n      \n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h3>Edit your profile:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              // placeholder={this.state.user.username}\n              name=\"newName\"\n              value={this.state.newName}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Email:</label>\n            <input\n              type=\"text\"\n              // placeholder={this.state.user.email}\n              name=\"newEmail\"\n              value={this.state.newEmail}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"imageUrl\"\n            onChange={e => this.handleFileUpload(e)}\n          />\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n         \n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"./ProjectService\";\nimport { Link } from \"react-router-dom\";\nimport PhotoService from \"../PhotoService\";\n\nexport default class EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectname: this.props.project.name,\n      bandname: this.props.project.bandname,\n      comments: this.props.project.comments,\n      imgPath: \"\",\n      error: null,\n      success: false\n    };\n    this.service = new ProjectService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const projectname = this.state.projectname;\n    const bandname = this.state.bandname;\n    const comments = this.state.comments;\n    const image = this.state.imgPath;\n    const projectID = this.props.project._id;\n\n    this.service\n      .editProject(projectID, projectname, bandname, comments, image)\n      .then(response => {\n        this.setState({\n          projectname: projectname,\n          bandname: bandname,\n          comments: comments,\n          imgPath: image,\n          success: true,\n          error: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.secure_url\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  checkToSend() {\n    if (!this.state.projectname || !this.state.imgPath) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    // console.log(this.props)\n    return (\n      <div>\n        <h3>Edit project:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Project name:</label>\n            <input\n              type=\"text\"\n              // placeholder={this.state.user.username}\n              name=\"projectname\"\n              value={this.state.projectname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Band name:</label>\n            <input\n              type=\"text\"\n              // placeholder={this.state.user.email}\n              name=\"bandname\"\n              value={this.state.bandname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Comments:</label>\n            <textarea\n              name=\"comments\"\n              value={this.state.comments}\n              onChange={e => this.handleChange(e)}\n            ></textarea>\n          </fieldset>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"imageUrl\"\n            onChange={e => this.handleFileUpload(e)}\n          />\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n\n        <div>\n          <Link to={`/viewprojects/${this.props.selectedStudio}`}>\n            Back to projects\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport StudioService from \"./StudioService\";\nimport { Link } from \"react-router-dom\";\nimport PhotoService from \"../PhotoService\";\n\nexport default class EditStudio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studioname: this.props.studio.studioname,\n      error: null,\n      success: false,\n      imgPath: \"\"\n    };\n    this.service = new StudioService();\n    this.photoService = new PhotoService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const studioname = this.state.studioname;\n    const image = this.state.imgPath;\n    const id = this.props.studio._id;\n\n    this.service\n      .editStudio(id, studioname, image)\n      .then(response => {\n        this.setState({\n          studioname: studioname,\n          imgPath: image,\n          success: true,\n          error: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  handleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.photoService\n      .handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imgPath: response.secure_url\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  checkToSend() {\n    if (!this.state.studioname || !this.state.imgPath) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit project:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Project name:</label>\n            <input\n              type=\"text\"\n              // placeholder={this.state.user.username}\n              name=\"studioname\"\n              value={this.state.studioname}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"imageUrl\"\n            onChange={e => this.handleFileUpload(e)}\n          />\n          <button type=\"submit\" disabled={this.checkToSend()}>\n            Save changes\n          </button>\n        </form>\n        <h2>{this.state.error ? \"Something went wrong\" : \"\"}</h2>\n        <h2>{this.state.success ? \"Success!\" : \"\"}</h2>\n\n        <div>\n          <Link to={`/viewprojects/${this.props.selectedStudio}`}>\n            Back to projects\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport AuthService from \"./components/auth/AuthService\";\nimport UserService from \"./components/contents/User/UserService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.css\";\nimport ViewStudios from \"./components/contents/Studio/ViewStudios\";\nimport ViewCalendar from \"./components/calendar/ViewCalendar\";\nimport ViewProjects from \"./components/contents/Project/ViewProjects\";\nimport ViewTasks from './components/contents/Task/ViewTasks'\nimport Profile from \"./components/contents/User/Profile\";\nimport EditProfile from './components/contents/User/EditProfile';\nimport EditProject from './components/contents/Project/EditProject'\nimport EditStudio from \"./components/contents/Studio/EditStudio\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: null,\n      projecttoedit: {},\n      selectedStudio: \"\",\n      studiotoedit: {},\n    };\n    this.service = new AuthService();\n    this.serviceUser = new UserService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  deleteUser() {\n    let userDeletion = prompt(\"Type 'delete' to confirm\");\n    if (userDeletion === \"delete\"){\n      this.serviceUser.deleteUser().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n    }\n  }\n\n  \n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  editProject = (project) => {\n    this.setState({...this.state, projecttoedit: project})\n  }\n\n  editStudio = (studio) => {\n    \n    this.setState({...this.state, studiotoedit: studio})\n  }\n\n  selectedStudio=(id)=>{\n    this.setState({...this.state,selectedStudio:id})\n  }\n\n  render() {\n    \n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n          <div className=\"App\">\n            <header>\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/viewcalendar\"\n                render={() => <ViewCalendar />}\n              />\n              <Route exact path=\"/viewstudios\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route exact path=\"/home\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route exact path=\"/\" render={() => <ViewStudios selected={this.selectedStudio} editStudio={this.editStudio}/>} />\n              <Route\n                exact\n                path=\"/profile\"\n                render={() => <Profile user={this.state.loggedInUser} deleteUser={() => this.deleteUser()} />}\n              />\n              <Route exact path=\"/editprofile\" render={() => <EditProfile user={this.state.loggedInUser}/>} />\n              <Route\n                path=\"/viewprojects/:id\"\n                render={props => <ViewProjects {...props} editProject={this.editProject}/>}\n              />\n              <Route\n                path=\"/editproject/:id\"\n                render={(props) => <EditProject {...props} project={this.state.projecttoedit}/>}\n              />\n              <Route\n                path=\"/editstudio/:id\"\n                render={(props) => <EditStudio {...props} studio={this.state.studiotoedit}/>}\n              />\n              <Route\n                path=\"/viewtasks/:id\"\n                render={(props) => <ViewTasks {...props} selectedStudio={this.state.selectedStudio}/>}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => <Login getUser={this.getUser} />}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}